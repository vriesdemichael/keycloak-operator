🎉 Keycloak Client has been created!

📦 Release Name: {{ .Release.Name }}
🔑 Client ID: {{ include "keycloak-client.clientId" . }}
🔧 Namespace: {{ .Release.Namespace }}
🏛️  Realm: {{ .Values.realmRef.name }} ({{ .Values.realmRef.namespace }})

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

{{- if .Values.rbac.create }}
✅ RBAC CONFIGURATION

A RoleBinding has been created to grant the Keycloak operator access to this namespace.

Operator Details:
• Namespace: {{ .Values.rbac.operatorNamespace }}
• ServiceAccount: {{ .Values.rbac.operatorServiceAccountName }}
• ClusterRole: {{ .Values.rbac.operatorClusterRoleName }}

The operator can now read secrets in this namespace that have the required label.

{{- else }}
⚠️  RBAC NOT CONFIGURED

You need to manually create a RoleBinding to grant operator access:

    kubectl create rolebinding keycloak-operator-access \
      --clusterrole={{ .Values.rbac.operatorClusterRoleName }} \
      --serviceaccount={{ .Values.rbac.operatorNamespace }}:{{ .Values.rbac.operatorServiceAccountName }} \
      -n {{ .Release.Namespace }}

{{- end }}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔐 IMPORTANT: SECRET LABEL REQUIREMENT

All secrets used by this client MUST have the following label:

    keycloak.mdvr.nl/allow-operator-read=true

Without this label, the operator will refuse to read the secret.

Example - label an existing secret:

    kubectl label secret my-client-secret \
      keycloak.mdvr.nl/allow-operator-read=true \
      -n {{ .Release.Namespace }}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔍 MONITORING YOUR CLIENT

Check the client status:

    kubectl get keycloakclient {{ include "keycloak-client.fullname" . }} -n {{ .Release.Namespace }}

Watch the client reconciliation:

    kubectl get keycloakclient {{ include "keycloak-client.fullname" . }} -n {{ .Release.Namespace }} -w

View client details:

    kubectl describe keycloakclient {{ include "keycloak-client.fullname" . }} -n {{ .Release.Namespace }}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

{{- if and (not .Values.publicClient) .Values.manageSecret }}

🔐 CLIENT SECRET

Your client secret will be stored in a Kubernetes secret.

1️⃣  Wait for the client to be ready:

    kubectl wait --for=jsonpath='{.status.phase}'=Ready \
      keycloakclient/{{ include "keycloak-client.fullname" . }} \
      -n {{ .Release.Namespace }} --timeout=300s

2️⃣  Retrieve the client secret:

    {{- if .Values.secretName }}
    SECRET_NAME="{{ .Values.secretName }}"
    {{- else }}
    SECRET_NAME="{{ include "keycloak-client.fullname" . }}-credentials"
    {{- end }}

    kubectl get secret $SECRET_NAME \
      -n {{ .Release.Namespace }} \
      -o jsonpath='{.data.client-secret}' | base64 -d

    ⚠️  Keep this secret safe! It's used to authenticate your application.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

{{- else if .Values.publicClient }}

ℹ️  PUBLIC CLIENT

This is a public client (e.g., for SPAs or mobile apps).
No client secret is required for authentication.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

{{- end }}

📚 CLIENT CONFIGURATION

{{- if .Values.redirectUris }}
Redirect URIs:
{{- range .Values.redirectUris }}
  • {{ . }}
{{- end }}
{{- else }}
⚠️  No redirect URIs configured. Add them with --set redirectUris={url1,url2}
{{- end }}

{{- if .Values.webOrigins }}

Web Origins:
{{- range .Values.webOrigins }}
  • {{ . }}
{{- end }}
{{- end }}

Client Type:
  • Public: {{ .Values.publicClient }}
  • Bearer Only: {{ .Values.bearerOnly }}
  • Service Account: {{ .Values.serviceAccountsEnabled }}

For more information:
• Documentation: https://github.com/vriesdemichael/keycloak-operator
• Issues: https://github.com/vriesdemichael/keycloak-operator/issues

Happy authenticating! 🔐
