apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: keycloakclients.keycloak.mdvr.nl
  labels:
    app.kubernetes.io/name: keycloak-operator
    app.kubernetes.io/component: crd
spec:
  group: keycloak.mdvr.nl
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        description: "Keycloak client configuration for dynamic OAuth2/OIDC client provisioning"
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            description: "Specification for a Keycloak client"
            properties:
              # Core client configuration
              clientId:
                type: string
                description: "Unique client identifier"
                minLength: 1
                maxLength: 255
              clientName:
                type: string
                description: "Human-readable client name"
              description:
                type: string
                description: "Client description"

              # Realm reference and authorization
              realmRef:
                type: object
                description: "Reference to the parent KeycloakRealm"
                properties:
                  name:
                    type: string
                    description: "Name of the KeycloakRealm CR"
                  namespace:
                    type: string
                    description: "Namespace of the KeycloakRealm CR"
                  authorizationSecretRef:
                    type: object
                    description: "Secret containing the token to authorize with the realm"
                    properties:
                      name:
                        type: string
                        description: "Name of the realm's authorization secret"
                      key:
                        type: string
                        description: "Key within the secret containing the token"
                        default: "token"
                    required:
                    - name
                required:
                - name
                - namespace
                - authorizationSecretRef

              # Client type configuration
              publicClient:
                type: boolean
                description: "Whether this is a public client"
                default: false
              bearerOnly:
                type: boolean
                description: "Bearer-only client"
                default: false
              protocol:
                type: string
                description: "Client protocol"
                enum: ["openid-connect", "saml", "docker-v2"]
                default: "openid-connect"

              # OAuth2/OIDC configuration
              redirectUris:
                type: array
                description: "Valid redirect URIs"
                items:
                  type: string
                  format: uri
              webOrigins:
                type: array
                description: "Valid web origins for CORS"
                items:
                  type: string
              postLogoutRedirectUris:
                type: array
                description: "Valid post-logout redirect URIs"
                items:
                  type: string
                  format: uri

              # Client settings
              settings:
                type: object
                description: "Advanced client settings"
                properties:
                  enabled:
                    type: boolean
                    default: true
                  alwaysDisplayInConsole:
                    type: boolean
                    default: false
                  clientAuthenticatorType:
                    type: string
                    enum: ["client-secret", "client-jwt", "client-secret-jwt", "client-x509"]
                    default: "client-secret"
                  # Access settings
                  standardFlowEnabled:
                    type: boolean
                    description: "Enable standard flow (authorization code flow)"
                    default: true
                  implicitFlowEnabled:
                    type: boolean
                    description: "Enable implicit flow"
                    default: false
                  directAccessGrantsEnabled:
                    type: boolean
                    description: "Enable direct access grants (password flow)"
                    default: true
                  serviceAccountsEnabled:
                    type: boolean
                    description: "Enable service accounts"
                    default: false
                  # Advanced settings
                  consentRequired:
                    type: boolean
                    default: false
                  displayOnConsentScreen:
                    type: boolean
                    default: true
                  includeInTokenScope:
                    type: boolean
                    default: true
                  # Token settings
                  accessTokenLifespan:
                    type: integer
                    description: "Access token lifespan in seconds"
                    minimum: 1
                  refreshTokenLifespan:
                    type: integer
                    description: "Refresh token lifespan in seconds"
                    minimum: 1

              # Authentication flows
              authenticationFlows:
                type: object
                description: "Client authentication flow overrides"
                properties:
                  browserFlow:
                    type: string
                    description: "Browser authentication flow"
                  directGrantFlow:
                    type: string
                    description: "Direct grant authentication flow"
                  clientAuthenticationFlow:
                    type: string
                    description: "Client authentication flow"

              # Scopes and mappers
              defaultClientScopes:
                type: array
                description: "Default client scopes"
                items:
                  type: string
              optionalClientScopes:
                type: array
                description: "Optional client scopes"
                items:
                  type: string
              protocolMappers:
                type: array
                description: "Protocol mappers"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    protocol:
                      type: string
                      default: "openid-connect"
                    protocolMapper:
                      type: string
                    config:
                      type: object
                      additionalProperties:
                        type: string
                  required:
                  - name
                  - protocolMapper

              # Roles and permissions
              clientRoles:
                type: array
                description: "Client-specific roles to create"
                items:
                  type: string

              serviceAccountRoles:
                type: object
                description: "Role mappings for the client's service account user"
                properties:
                  realmRoles:
                    type: array
                    description: "Realm-level roles to assign to the service account"
                    items:
                      type: string
                    example: ["offline_access", "uma_authorization"]
                  clientRoles:
                    type: object
                    description: "Client-level roles to assign to the service account"
                    additionalProperties:
                      type: array
                      items:
                        type: string
                    example:
                      api-server: ["read:data", "write:data"]
                      admin-console: ["view-users"]

              # Advanced configuration
              attributes:
                type: object
                description: "Additional client attributes"
                additionalProperties:
                  type: string

              # Secret management
              regenerateSecret:
                type: boolean
                description: "Regenerate client secret on update"
                default: false
              secretName:
                type: string
                description: "Name of Kubernetes secret for client credentials"
              manageSecret:
                type: boolean
                description: "Create and manage Kubernetes secret for credentials"
                default: true

            required:
            - clientId
            - realmRef

          status:
            type: object
            description: "Current status of the Keycloak client"
            properties:
              phase:
                type: string
                description: "Current phase"
                enum: ["Pending", "Provisioning", "Ready", "Failed", "Updating", "Degraded"]
              message:
                type: string
              reason:
                type: string
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ["True", "False", "Unknown"]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              observedGeneration:
                type: integer
              # Client information
              clientId:
                type: string
              internalId:
                type: string
              realm:
                type: string
              publicClient:
                type: boolean
              # Connection information
              keycloakInstance:
                type: string
              credentialsSecret:
                type: string
              # Endpoints
              endpoints:
                type: object
                properties:
                  auth:
                    type: string
                  token:
                    type: string
                  userinfo:
                    type: string
                  jwks:
                    type: string
                  issuer:
                    type: string
                  endSession:
                    type: string
              # Health monitoring
              lastHealthCheck:
                type: string
                format: date-time
              lastUpdated:
                type: string
                format: date-time
              # Statistics
              createdRoles:
                type: array
                items:
                  type: string
              appliedMappers:
                type: array
                items:
                  type: string
    additionalPrinterColumns:
    - name: Phase
      type: string
      jsonPath: .status.phase
    - name: Client ID
      type: string
      jsonPath: .spec.clientId
    - name: Realm
      type: string
      jsonPath: .spec.realm
    - name: Keycloak
      type: string
      jsonPath: .status.keycloakInstance
    - name: Public
      type: boolean
      jsonPath: .status.publicClient
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
  scope: Namespaced
  names:
    plural: keycloakclients
    singular: keycloakclient
    kind: KeycloakClient
    shortNames:
    - kcc
