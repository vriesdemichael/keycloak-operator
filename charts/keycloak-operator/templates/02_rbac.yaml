{{- if .Values.serviceAccount.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "keycloak-operator.serviceAccountName" . }}
  namespace: {{ include "keycloak-operator.namespace" . }}
  labels:
    {{- include "keycloak-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
automountServiceAccountToken: true
{{- end }}

{{- if .Values.rbac.create }}
---
# Minimal ClusterRole for watching CRDs across all namespaces
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "keycloak-operator.fullname" . }}-core
  labels:
    {{- include "keycloak-operator.labels" . | nindent 4 }}
  {{- with include "keycloak-operator.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
rules:
# Watch CRDs cluster-wide (read-only metadata)
- apiGroups: ["keycloak.mdvr.nl"]
  resources:
  - keycloaks
  - keycloakclients
  - keycloakrealms
  verbs: ["list", "watch"]

# Update CRD status and finalizers (required by Kopf)
- apiGroups: ["keycloak.mdvr.nl"]
  resources:
  - keycloaks/status
  - keycloakclients/status
  - keycloakrealms/status
  verbs: ["get", "update", "patch"]

- apiGroups: ["keycloak.mdvr.nl"]
  resources:
  - keycloaks/finalizers
  - keycloakclients/finalizers
  - keycloakrealms/finalizers
  verbs: ["update"]

# Namespace discovery (for validation)
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]

# Leader election (cluster-wide leases)
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

# Events (cluster-wide)
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Self-permission checks
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]

# Kopf peering for leader election (HA)
- apiGroups: ["kopf.dev"]
  resources: ["clusterkopfpeerings"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# Namespace-scoped Role for managing resources in operator's own namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "keycloak-operator.fullname" . }}-manager
  namespace: {{ include "keycloak-operator.namespace" . }}
  labels:
    {{- include "keycloak-operator.labels" . | nindent 4 }}
  {{- with include "keycloak-operator.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
rules:
# CRDs in operator namespace (Keycloak instances live here)
- apiGroups: ["keycloak.mdvr.nl"]
  resources:
  - keycloaks
  - keycloakclients
  - keycloakrealms
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Kubernetes core resource management
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

- apiGroups: ["apps"]
  resources: ["deployments/status", "statefulsets/status", "replicasets/status"]
  verbs: ["get"]

- apiGroups: [""]
  resources: ["services", "configmaps", "secrets", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]

# Networking
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Monitoring and observability
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Certificate management
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# CloudNativePG (database cluster in operator namespace)
- apiGroups: ["postgresql.cnpg.io"]
  resources: ["clusters", "poolers", "backups"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Webhook configuration
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# OpenShift support (optional)
- apiGroups: ["route.openshift.io"]
  resources: ["routes"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Kopf peering (namespace-scoped)
- apiGroups: ["kopf.dev"]
  resources: ["kopfpeerings"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# Template ClusterRole for teams to grant operator access to their namespace
# Teams create a RoleBinding in their namespace referencing this ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "keycloak-operator.fullname" . }}-namespace-access
  labels:
    {{- include "keycloak-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: rbac-template
  {{- with include "keycloak-operator.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
rules:
# Read CRDs in the namespace
- apiGroups: ["keycloak.mdvr.nl"]
  resources:
  - keycloakclients
  - keycloakrealms
  verbs: ["get", "list", "watch"]

# Read labeled secrets only (validation enforced in code)
# Label required: keycloak.mdvr.nl/allow-operator-read=true
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]

# Create events for status reporting
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
# ClusterRoleBinding for minimal cluster-wide permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "keycloak-operator.fullname" . }}-core
  labels:
    {{- include "keycloak-operator.labels" . | nindent 4 }}
  {{- with include "keycloak-operator.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "keycloak-operator.fullname" . }}-core
subjects:
- kind: ServiceAccount
  name: {{ include "keycloak-operator.serviceAccountName" . }}
  namespace: {{ include "keycloak-operator.namespace" . }}

---
# RoleBinding for namespace-scoped permissions in operator namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "keycloak-operator.fullname" . }}-manager
  namespace: {{ include "keycloak-operator.namespace" . }}
  labels:
    {{- include "keycloak-operator.labels" . | nindent 4 }}
  {{- with include "keycloak-operator.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "keycloak-operator.fullname" . }}-manager
subjects:
- kind: ServiceAccount
  name: {{ include "keycloak-operator.serviceAccountName" . }}
  namespace: {{ include "keycloak-operator.namespace" . }}
{{- end }}
