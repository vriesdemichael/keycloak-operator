apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: keycloakrealms.keycloak.mdvr.nl
  labels:
    app.kubernetes.io/name: keycloak-operator
    app.kubernetes.io/component: crd
spec:
  group: keycloak.mdvr.nl
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        description: "Keycloak realm configuration for comprehensive identity and access management"
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            description: "Specification for a Keycloak realm"
            properties:
              # Core realm configuration
              realmName:
                type: string
                description: "Realm name (must be unique in Keycloak)"
                minLength: 1
                maxLength: 255
              displayName:
                type: string
                description: "Human-readable realm name"
              description:
                type: string
                description: "Realm description"
              loginPageTitle:
                type: string
                description: "HTML title for login pages"

              # Operator reference and authorization
              operatorRef:
                type: object
                description: "Reference to the operator managing this realm"
                properties:
                  namespace:
                    type: string
                    description: "Namespace where the operator is running (e.g., keycloak-system)"
                  authorizationSecretRef:
                    type: object
                    description: "Secret containing the token to authorize with the operator"
                    properties:
                      name:
                        type: string
                        description: "Name of the authorization secret"
                      key:
                        type: string
                        description: "Key within the secret containing the token"
                        default: "token"
                    required:
                    - name
                required:
                - namespace
                - authorizationSecretRef

              # Security settings
              security:
                type: object
                description: "Security and authentication settings"
                properties:
                  # Registration and email
                  registrationAllowed:
                    type: boolean
                    default: false
                  registrationEmailAsUsername:
                    type: boolean
                    default: false
                  editUsernameAllowed:
                    type: boolean
                    default: false
                  resetPasswordAllowed:
                    type: boolean
                    default: true
                  rememberMe:
                    type: boolean
                    default: false
                  verifyEmail:
                    type: boolean
                    default: false
                  loginWithEmailAllowed:
                    type: boolean
                    default: true
                  duplicateEmailsAllowed:
                    type: boolean
                    default: false
                  # SSL/TLS requirements
                  sslRequired:
                    type: string
                    enum: ["all", "external", "none"]
                    default: "external"
                  # Session and token settings
                  revokeRefreshToken:
                    type: boolean
                    default: false
                  refreshTokenMaxReuse:
                    type: integer
                    minimum: 0
                  # Brute force protection
                  bruteForceProtected:
                    type: boolean
                    default: false
                  permanentLockout:
                    type: boolean
                    default: false
                  maxFailureWait:
                    type: integer
                    minimum: 1
                  minimumQuickLoginWait:
                    type: integer
                    minimum: 1
                  waitIncrement:
                    type: integer
                    minimum: 1
                  quickLoginCheckMillis:
                    type: integer
                    minimum: 1
                  maxDeltaTime:
                    type: integer
                    minimum: 1
                  failureFactor:
                    type: integer
                    minimum: 1

              # Token settings
              tokenSettings:
                type: object
                description: "Token and session configuration"
                properties:
                  accessTokenLifespan:
                    type: integer
                    minimum: 1
                    description: "Access token lifespan in seconds"
                  accessTokenLifespanForImplicitFlow:
                    type: integer
                    minimum: 1
                  ssoSessionIdleTimeout:
                    type: integer
                    minimum: 1
                  ssoSessionMaxLifespan:
                    type: integer
                    minimum: 1
                  offlineSessionIdleTimeout:
                    type: integer
                    minimum: 1
                  offlineSessionMaxLifespanEnabled:
                    type: boolean
                    default: false
                  offlineSessionMaxLifespan:
                    type: integer
                    minimum: 1
                  clientSessionIdleTimeout:
                    type: integer
                    minimum: 1
                  clientSessionMaxLifespan:
                    type: integer
                    minimum: 1
                  clientOfflineSessionIdleTimeout:
                    type: integer
                    minimum: 1
                  clientOfflineSessionMaxLifespan:
                    type: integer
                    minimum: 1

              # Theme configuration
              themes:
                type: object
                description: "Theme configuration"
                properties:
                  login:
                    type: string
                    description: "Login theme"
                  admin:
                    type: string
                    description: "Admin theme"
                  account:
                    type: string
                    description: "Account theme"
                  email:
                    type: string
                    description: "Email theme"

              # SMTP configuration
              smtpServer:
                type: object
                description: "SMTP server configuration for email. Use passwordSecret for secure credential storage."
                properties:
                  host:
                    type: string
                    description: "SMTP server host"
                  port:
                    type: integer
                    minimum: 1
                    maximum: 65535
                    description: "SMTP server port"
                  from:
                    type: string
                    description: "From email address"
                  fromDisplayName:
                    type: string
                    description: "From display name"
                  replyTo:
                    type: string
                    description: "Reply-to email address"
                  envelopeFrom:
                    type: string
                    description: "Envelope from address"
                  ssl:
                    type: boolean
                    default: false
                    description: "Use SSL"
                  starttls:
                    type: boolean
                    default: false
                    description: "Use STARTTLS"
                  auth:
                    type: boolean
                    default: false
                    description: "Require authentication"
                  user:
                    type: string
                    description: "SMTP username"
                  password:
                    type: string
                    description: "SMTP password (use passwordSecret instead for better security)"
                  passwordSecret:
                    type: object
                    description: "Reference to Kubernetes secret containing SMTP password (recommended over password)"
                    properties:
                      name:
                        type: string
                        description: "Secret name"
                      key:
                        type: string
                        description: "Key in secret data"
                        default: "password"
                    required:
                    - name

              # Localization
              localization:
                type: object
                description: "Internationalization settings"
                properties:
                  enabled:
                    type: boolean
                    default: false
                  supportedLocales:
                    type: array
                    items:
                      type: string
                  defaultLocale:
                    type: string

              # Authentication flows
              authenticationFlows:
                type: array
                description: "Custom authentication flows"
                items:
                  type: object
                  properties:
                    alias:
                      type: string
                    description:
                      type: string
                    providerId:
                      type: string
                    topLevel:
                      type: boolean
                    builtIn:
                      type: boolean
                    executionConfig:
                      type: object
                      additionalProperties: true
                  required:
                  - alias

              # Identity providers
              identityProviders:
                type: array
                description: "Identity provider configurations"
                items:
                  type: object
                  properties:
                    alias:
                      type: string
                    providerId:
                      type: string
                    enabled:
                      type: boolean
                      default: true
                    trustEmail:
                      type: boolean
                      default: false
                    storeToken:
                      type: boolean
                      default: false
                    addReadTokenRoleOnCreate:
                      type: boolean
                      default: false
                    authenticateByDefault:
                      type: boolean
                      default: false
                    linkOnly:
                      type: boolean
                      default: false
                    firstBrokerLoginFlowAlias:
                      type: string
                    postBrokerLoginFlowAlias:
                      type: string
                    config:
                      type: object
                      additionalProperties:
                        type: string
                  required:
                  - alias
                  - providerId

              # User federation
              userFederation:
                type: array
                description: "User federation provider configurations"
                items:
                  type: object
                  properties:
                    displayName:
                      type: string
                    providerName:
                      type: string
                    priority:
                      type: integer
                      minimum: 0
                    config:
                      type: object
                      additionalProperties:
                        type: string
                  required:
                  - displayName
                  - providerName

              # Client scopes
              clientScopes:
                type: array
                description: "Client scope definitions"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    protocol:
                      type: string
                      default: "openid-connect"
                    attributes:
                      type: object
                      additionalProperties:
                        type: string
                    protocolMappers:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          protocol:
                            type: string
                          protocolMapper:
                            type: string
                          config:
                            type: object
                            additionalProperties:
                              type: string
                        required:
                        - name
                        - protocolMapper
                  required:
                  - name

              # Roles
              roles:
                type: object
                description: "Realm and client role definitions"
                properties:
                  realmRoles:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        composite:
                          type: boolean
                          default: false
                        clientRole:
                          type: boolean
                          default: false
                        containerId:
                          type: string
                      required:
                      - name

              # Groups
              groups:
                type: array
                description: "Group definitions"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    path:
                      type: string
                    attributes:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                    realmRoles:
                      type: array
                      items:
                        type: string
                    clientRoles:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                  required:
                  - name

              # Custom attributes
              attributes:
                type: object
                description: "Additional realm attributes"
                additionalProperties:
                  type: string

              # Events configuration
              eventsConfig:
                type: object
                description: "Event logging configuration"
                properties:
                  eventsEnabled:
                    type: boolean
                    default: false
                  eventsListeners:
                    type: array
                    items:
                      type: string
                  enabledEventTypes:
                    type: array
                    items:
                      type: string
                  eventsExpiration:
                    type: integer
                    minimum: 1
                  adminEventsEnabled:
                    type: boolean
                    default: false
                  adminEventsDetailsEnabled:
                    type: boolean
                    default: false

            required:
            - realmName
            - operatorRef

          status:
            type: object
            description: "Current status of the Keycloak realm"
            properties:
              phase:
                type: string
                description: "Current phase"
                enum: ["Pending", "Provisioning", "Ready", "Failed", "Updating", "Degraded"]
              message:
                type: string
              reason:
                type: string
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ["True", "False", "Unknown"]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              observedGeneration:
                type: integer
              # Realm information
              realmName:
                type: string
              internalId:
                type: string
              # Connection information
              keycloakInstance:
                type: string
              # Authorization
              authorizationSecretName:
                type: string
                description: "Name of the secret containing the realm's authorization token for client delegation"
              # Endpoints
              endpoints:
                type: object
                properties:
                  issuer:
                    type: string
                  auth:
                    type: string
                  token:
                    type: string
                  userinfo:
                    type: string
                  jwks:
                    type: string
                  endSession:
                    type: string
                  registration:
                    type: string
              # Feature status
              features:
                type: object
                properties:
                  userRegistration:
                    type: boolean
                  passwordReset:
                    type: boolean
                  identityProviders:
                    type: integer
                  userFederationProviders:
                    type: integer
                  customThemes:
                    type: boolean
              # Health monitoring
              lastHealthCheck:
                type: string
                format: date-time
              lastUpdated:
                type: string
                format: date-time
              # Statistics
              activeUsers:
                type: integer
                minimum: 0
              totalClients:
                type: integer
                minimum: 0
              realmRolesCount:
                type: integer
                minimum: 0
    additionalPrinterColumns:
    - name: Phase
      type: string
      jsonPath: .status.phase
    - name: Realm
      type: string
      jsonPath: .spec.realmName
    - name: Keycloak
      type: string
      jsonPath: .status.keycloakInstance
    - name: Users
      type: integer
      jsonPath: .status.activeUsers
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
  scope: Namespaced
  names:
    plural: keycloakrealms
    singular: keycloakrealm
    kind: KeycloakRealm
    shortNames:
    - kcr
