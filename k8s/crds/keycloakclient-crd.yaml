apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: keycloakclients.keycloak.mdvr.nl
  labels:
    app.kubernetes.io/name: keycloak-operator
    app.kubernetes.io/component: crd
spec:
  group: keycloak.mdvr.nl
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        description: "Keycloak client configuration for dynamic OAuth2/OIDC client provisioning"
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            description: "Specification for a Keycloak client"
            properties:
              # Core client configuration
              client_id:
                type: string
                description: "Unique client identifier"
                minLength: 1
                maxLength: 255
              client_name:
                type: string
                description: "Human-readable client name"
              description:
                type: string
                description: "Client description"

              # Target configuration
              keycloak_instance_ref:
                type: object
                description: "Reference to the target Keycloak instance"
                properties:
                  name:
                    type: string
                    description: "Name of the Keycloak instance"
                  namespace:
                    type: string
                    description: "Namespace of the Keycloak instance"
                required:
                - name
              realm:
                type: string
                description: "Target realm name"
                default: "master"

              # Client type configuration
              public_client:
                type: boolean
                description: "Whether this is a public client"
                default: false
              bearer_only:
                type: boolean
                description: "Bearer-only client"
                default: false
              protocol:
                type: string
                description: "Client protocol"
                enum: ["openid-connect", "saml", "docker-v2"]
                default: "openid-connect"

              # OAuth2/OIDC configuration
              redirect_uris:
                type: array
                description: "Valid redirect URIs"
                items:
                  type: string
                  format: uri
              web_origins:
                type: array
                description: "Valid web origins for CORS"
                items:
                  type: string
              post_logout_redirect_uris:
                type: array
                description: "Valid post-logout redirect URIs"
                items:
                  type: string
                  format: uri

              # Client settings
              settings:
                type: object
                description: "Advanced client settings"
                properties:
                  enabled:
                    type: boolean
                    default: true
                  always_display_in_console:
                    type: boolean
                    default: false
                  client_authenticator_type:
                    type: string
                    enum: ["client-secret", "client-jwt", "client-secret-jwt", "client-x509"]
                    default: "client-secret"
                  # Access settings
                  standard_flow_enabled:
                    type: boolean
                    description: "Enable standard flow (authorization code flow)"
                    default: true
                  implicit_flow_enabled:
                    type: boolean
                    description: "Enable implicit flow"
                    default: false
                  direct_access_grants_enabled:
                    type: boolean
                    description: "Enable direct access grants (password flow)"
                    default: true
                  service_accounts_enabled:
                    type: boolean
                    description: "Enable service accounts"
                    default: false
                  # Advanced settings
                  consent_required:
                    type: boolean
                    default: false
                  display_on_consent_screen:
                    type: boolean
                    default: true
                  include_in_token_scope:
                    type: boolean
                    default: true
                  # Token settings
                  access_token_lifespan:
                    type: integer
                    description: "Access token lifespan in seconds"
                    minimum: 1
                  refresh_token_lifespan:
                    type: integer
                    description: "Refresh token lifespan in seconds"
                    minimum: 1

              # Authentication flows
              authentication_flows:
                type: object
                description: "Client authentication flow overrides"
                properties:
                  browser_flow:
                    type: string
                    description: "Browser authentication flow"
                  direct_grant_flow:
                    type: string
                    description: "Direct grant authentication flow"
                  client_authentication_flow:
                    type: string
                    description: "Client authentication flow"

              # Scopes and mappers
              default_client_scopes:
                type: array
                description: "Default client scopes"
                items:
                  type: string
              optional_client_scopes:
                type: array
                description: "Optional client scopes"
                items:
                  type: string
              protocol_mappers:
                type: array
                description: "Protocol mappers"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    protocol:
                      type: string
                      default: "openid-connect"
                    protocol_mapper:
                      type: string
                    config:
                      type: object
                      additionalProperties:
                        type: string
                  required:
                  - name
                  - protocol_mapper

              # Roles and permissions
              client_roles:
                type: array
                description: "Client-specific roles to create"
                items:
                  type: string

              service_account_roles:
                type: object
                description: "Role mappings for the client's service account user"
                properties:
                  realm_roles:
                    type: array
                    description: "Realm-level roles to assign to the service account"
                    items:
                      type: string
                    example: ["offline_access", "uma_authorization"]
                  client_roles:
                    type: object
                    description: "Client-level roles to assign to the service account"
                    additionalProperties:
                      type: array
                      items:
                        type: string
                    example:
                      api-server: ["read:data", "write:data"]
                      admin-console: ["view-users"]

              # Advanced configuration
              attributes:
                type: object
                description: "Additional client attributes"
                additionalProperties:
                  type: string

              # Secret management
              regenerate_secret:
                type: boolean
                description: "Regenerate client secret on update"
                default: false
              secret_name:
                type: string
                description: "Name of Kubernetes secret for client credentials"
              manage_secret:
                type: boolean
                description: "Create and manage Kubernetes secret for credentials"
                default: true

            required:
            - client_id
            - keycloak_instance_ref

          status:
            type: object
            description: "Current status of the Keycloak client"
            properties:
              phase:
                type: string
                description: "Current phase"
                enum: ["Pending", "Provisioning", "Ready", "Failed", "Updating"]
              message:
                type: string
              reason:
                type: string
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ["True", "False", "Unknown"]
                    reason:
                      type: string
                    message:
                      type: string
                    last_transition_time:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status
              observed_generation:
                type: integer
              # Client information
              client_id:
                type: string
              internal_id:
                type: string
              realm:
                type: string
              public_client:
                type: boolean
              # Connection information
              keycloak_instance:
                type: string
              credentials_secret:
                type: string
              # Endpoints
              endpoints:
                type: object
                properties:
                  auth:
                    type: string
                  token:
                    type: string
                  userinfo:
                    type: string
                  jwks:
                    type: string
                  issuer:
                    type: string
                  end_session:
                    type: string
              # Health monitoring
              last_health_check:
                type: string
                format: date-time
              last_updated:
                type: string
                format: date-time
              # Statistics
              created_roles:
                type: array
                items:
                  type: string
              applied_mappers:
                type: array
                items:
                  type: string
    additionalPrinterColumns:
    - name: Phase
      type: string
      jsonPath: .status.phase
    - name: Client ID
      type: string
      jsonPath: .spec.client_id
    - name: Realm
      type: string
      jsonPath: .spec.realm
    - name: Keycloak
      type: string
      jsonPath: .status.keycloak_instance
    - name: Public
      type: boolean
      jsonPath: .status.public_client
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
  scope: Namespaced
  names:
    plural: keycloakclients
    singular: keycloakclient
    kind: KeycloakClient
    shortNames:
    - kcc