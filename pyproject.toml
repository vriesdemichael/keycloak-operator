[project]
name = "keycloak-operator"
version = "0.1.0"
description = "A GitOps-compatible Keycloak operator built with Kopf"
authors = [
    {name = "MichaÃ«l de Vries", email = "vriesdemichael@gmail.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "kopf>=1.37.0",
    "pydantic>=2.0.0",
    "kubernetes>=28.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "prometheus-client>=0.20.0",
    "pybreaker>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/vriesdemichael/keycloak-operator"
Repository = "https://github.com/vriesdemichael/keycloak-operator"
Documentation = "https://github.com/vriesdemichael/keycloak-operator#readme"
"Issue Tracker" = "https://github.com/vriesdemichael/keycloak-operator/issues"
Changelog = "https://github.com/vriesdemichael/keycloak-operator/blob/main/CHANGELOG.md"


[project.scripts]
keycloak-operator = "keycloak_operator.operator:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short --timeout=300"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "requires_cluster: marks tests that require a Kubernetes cluster",
    "unit: marks tests as unit tests",
]
# Timeout for integration tests (15 minutes for slow Kind operations)
timeout = 900

[dependency-groups]
quality = [
    "ruff>=0.13.1",
    "ty>=0.0.1a21",
    "types-requests>=2.32.4.20250913",
]
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.25.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-section-index>=0.3.8",
    "mkdocs-literate-nav>=0.6.1",
    "markdown-exec>=1.9.0",
]
test = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-timeout>=2.3.1",
    "pytest-xdist>=3.5.0",
    "pyyaml>=6.0.0",
    "pytest-helm-charts>=1.3.2",
    "pytest-cov>=4.1.0",
]
security = [
    "pip-audit>=2.7.0",
    "safety>=3.0.0",
]
dev = [
    { include-group = "quality" },
    { include-group = "test" },
    { include-group = "security" },
    "datamodel-code-generator[http]>=0.25.0",  # For generating Pydantic models from OpenAPI specs
]