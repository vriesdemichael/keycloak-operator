# yaml-language-server: $schema=https://vriesdemichael.github.io/keycloak-operator/schemas/v1/Keycloak.json
# Basic Keycloak instance with CloudNativePG database
#
# This creates a production-ready Keycloak instance with:
# - High availability (3 replicas)
# - PostgreSQL database managed by CloudNativePG operator
# - Automatic admin credentials generation
# - Health probes and resource limits
#
# Prerequisites:
# - CloudNativePG operator installed (for database)
# - CloudNativePG Cluster created (see CNPG documentation)
# - Or modify to use external database

apiVersion: keycloak.mdvr.nl/v1
kind: Keycloak
metadata:
  name: keycloak
  namespace: keycloak-system
spec:
  # Number of Keycloak replicas for high availability
  replicas: 3

  # Keycloak container image (version is part of tag)
  image: quay.io/keycloak/keycloak:26.0.0

  # Database configuration for CloudNativePG
  # Note: Use standard PostgreSQL connection to CNPG cluster
  database:
    type: postgresql
    host: keycloak-postgres-rw  # CNPG read-write service
    port: 5432
    database: app
    username: app
    passwordSecret:
      name: keycloak-postgres-app  # CNPG-generated secret
      key: password

  # Resource limits for Keycloak pods
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "2000m"
      memory: "2Gi"

  # Optional: TLS configuration (recommended for production)
  # tls:
  #   enabled: true
  #   secretName: keycloak-tls-cert

  # Optional: Ingress configuration
  # ingress:
  #   enabled: true
  #   host: keycloak.example.com
  #   className: nginx
  #   annotations:
  #     cert-manager.io/cluster-issuer: letsencrypt-prod
